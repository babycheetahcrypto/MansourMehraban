datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  telegramId        String            @unique
  username          String?
  firstName         String?
  lastName          String?
  coins             Int               @default(0)
  level             Int               @default(1)
  experience        Int               @default(0)
  dailyReward       DailyReward?
  shopItems         ShopItem[]
  premiumShopItems  PremiumShopItem[]
  tasks             Task[]
  trophies          Trophy[]
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

model DailyReward {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  lastClaim DateTime
  streak    Int      @default(0)
}

model ShopItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  itemId    String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PremiumShopItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  itemId    String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  taskId      String
  progress    Int      @default(0)
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Trophy {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  trophyId  String
  createdAt DateTime @default(now())
}

